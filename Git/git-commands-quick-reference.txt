$ git config --global user.name "John Doe"
$ git config --global user.email johndoe@example.com
$ git config --global core.editor emacs
$ git config --global merge.tool vimdiff

git config --list
git config user.name
$ git help <verb>
$ git <verb> --help
$ man git-<verb>
-------------------------
$cd <project-directory>
$ git init

$ git add *.c
$ git commit -m 'initial project version'
-------------------------
$git clone [url]

-------------------------

Q: How to find the current branch?
A: git status or git branch -v

Q: How to start tracking files? 
A: git add [<file><directory>] --> if this is a directory then all the files udner the directory are recursively added


Q: Can a file appear in both "changes to be commited" and "not staged for commit" in the"git status" command result? 
A: yes, this can happen when a file that has been staged (and not committed) has been edited again and has not been staged yet after the latest change. The commands would be as follows:

git add somefile
git status --> this would show the file to be staged
vi somefile
git status --> this wil show the file to be both in - "changes to be commmited" due to earlier git add command, and also in the "not staged for commit" section due to the latest edit on the same file

Q: What is the difference between git status and git diff?
A: status show the following:
	1. the current branch
	2. which files have changed? 
	3. what changes are staged and are ready to be commited
	4. what changes are yet to be staged

   diff shows exactly what chages have been made in which files

